on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

name: ci

jobs:
    window_build_cpu:
        name: CPU (OpenBLAS, windows-latest)
        runs-on: windows-latest
        env:
          VCPKG_HASH: b79f7675aaa82eb6c5a96ae764fb1ce379a9d5d6 # March 29, 2020 - [hdf5] add tools and fortran feature
          LAPACKE_VER: 3.7.0
          NINJA_VER: 1.10.0
        steps:
            - name: Checkout Repository
              uses: actions/checkout@master

            - name: Checkout Submodules
              shell: bash
              run: git submodule update --init --recursive

            - name: VCPKG Cache
              uses: actions/cache@v1
              id: vcpkg-cache
              with:
                path: vcpkg
                key: vcpkg-deps-${{ env.VCPKG_HASH }}

            - name: Install VCPKG Common Deps
              if: steps.vcpkg-cache.outputs.cache-hit != 'true'
              run: |
                  git clone --recursive https://github.com/microsoft/vcpkg
                  Set-Location -Path .\vcpkg
                  git reset --hard $env:VCPKG_HASH
                  .\bootstrap-vcpkg.bat
                  .\vcpkg.exe install --triplet x64-windows fftw3 freeimage freetype glfw3 openblas
                  Remove-Item .\downloads,.\buildtrees,.\packages -Recurse -Force

            - name: Download Ninja
              run: |
                  Invoke-WebRequest -Uri "https://github.com/ninja-build/ninja/releases/download/v$env:NINJA_VER/ninja-win.zip" -OutFile ninja.zip
                  Expand-Archive -Path ninja.zip -DestinationPath .

            - name: Fetch Build Details
              run: |
                  $cwd = (Get-Item -Path ".\").FullName
                  $ref = $env:GITHUB_REF | %{ if ($_ -match "refs/pull/[0-9]+/merge") { $_;} }
                  $prnum = $ref | %{$_.Split("/")[2]}
                  $branch = git branch --show-current
                  $buildname = if($prnum -eq $null) { $branch } else { "PR-$prnum" }
                  $dashboard = if($prnum -eq $null) { "Continuous" } else { "Experimental" }
                  $buildname = "$buildname-cpu-openblas"
                  echo "::set-env name=CTEST_DASHBOARD::${dashboard}"
                  echo "::set-env name=CTEST_BUILDNAME::${buildname}"

            - name: CMake Configure
              shell: cmd
              run: |
                  "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat" & ^
                  mkdir build && cd build & ^
                  cmake .. -G Ninja ^
                      -DCMAKE_MAKE_PROGRAM:FILEPATH="%GITHUB_WORKSPACE%\ninja.exe" ^
                      -DCMAKE_TOOLCHAIN_FILE:FILEPATH="%GITHUB_WORKSPACE%\vcpkg\scripts\buildsystems\vcpkg.cmake" ^
                      -DFFTW_INCLUDE_DIR:PATH="%GITHUB_WORKSPACE%\vcpkg\installed/x64-windows\include" ^
                      -DFFTW_LIBRARY:FILEPATH="%GITHUB_WORKSPACE%\vcpkg\installed\x64-windows\lib\fftw3.lib" ^
                      -DFFTWF_LIBRARY:FILEPATH="%GITHUB_WORKSPACE%\vcpkg\installed\x64-windows\lib\fftw3f.lib" ^
                      -DAF_BUILD_CUDA:BOOL=OFF -DAF_BUILD_OPENCL:BOOL=OFF ^
                      -DAF_BUILD_UNIFIED:BOOL=OFF -DAF_BUILD_FORGE:BOOL=ON ^
                      -DBUILDNAME:STRING="%CTEST_BUILDNAME%"

            - name: Build and Test
              run: |
                  $cwd = (Get-Item -Path ".\").FullName
                  $Env:PATH += ";$cwd/vcpkg/installed/x64-windows/bin"
                  $Env:PATH += ";$cwd/lapacke"
                  Set-Location -Path $cwd/build
                  ctest -D Experimental --track ${CTEST_DASHBOARD} -T Test -T Submit -C Release -R cpu -E pinverse -j2